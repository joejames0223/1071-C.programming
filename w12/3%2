#include <stdio.h>
#include <stdlib.h>
#include <time.h>

struct Pos
{
    int row;
    int col;
};

int prArr(int m[][8])
{
    printf("|-----|-----|-----|-----|-----|-----|-----|-----|\n");
    for(int i=0; i<8; i++)
    {
        for(int j=0; j<8; j++)
        {
            printf("|  %2d ",m[i][j]);
        }
        printf("|\n");
        printf("|-----|-----|-----|-----|-----|-----|-----|-----|\n");
    }
}
int prarr(int n[][8])
{
    printf("|-----|-----|-----|-----|-----|-----|-----|-----|\n");
    for(int i=0; i<8; i++)
    {
        for(int j=0; j<8; j++)
        {
            printf("|  %2d ",n[i][j]);
        }
        printf("|\n");
        printf("|-----|-----|-----|-----|-----|-----|-----|-----|\n");
    }
}

Pos findNextBestMove(int m[][8],int access[][8], int row, int col)
{
    int h[8]= {2,1,-1,-2,-2,-1,1,2};
    int v[8]= {-1,-2,-2,-1,1,2,2,1};
    Pos pos;
    int nextRow, nextCol;
    int min=9;
    int minRow=-1, minCol=-1;
    access[row][col] = 0;
    for(int i=0; i<8; i++)
    {
        nextRow = row + v[i];
        nextCol = col + h[i];
        if(nextRow>=0 && nextRow<=7 && nextCol>=0 && nextCol <=7 && access[nextRow][nextCol]>0)  //access[nextRow][nextCol] access打錯
        {
            access[nextRow][nextCol]--;
            if(access[nextRow][nextCol] < min)
            {
                min = access[nextRow][nextCol];
                minRow = nextRow;
                minCol = nextCol;
            }
        }
    }
    pos.row = minRow;
    pos.col = minCol;
    return pos;
};
int xx(int row,int col)
{
    int m[8][8]= {0};
    int access[ 8 ][ 8 ] =
    {
        2, 3, 4, 4, 4, 4, 3, 2,
        3, 4, 6, 6, 6, 6, 4, 3,
        4, 6, 8, 8, 8, 8, 6, 4,
        4, 6, 8, 8, 8, 8, 6, 4,
        4, 6, 8, 8, 8, 8, 6, 4,
        4, 6, 8, 8, 8, 8, 6, 4,
        3, 4, 6, 6, 6, 6, 4, 3,
        2, 3, 4, 4, 4, 4, 3, 2
    };
    Pos pos;
    int moves = 1;
    m[row][col] = 1;
    for(int i=2; i<=64; i++)
    {
        pos = findNextBestMove(m, access, row, col);
        if(pos.row== -1 && pos.col== -1)
        {
            break;
        }
        else
        {
            m[pos.row][pos.col] = i;
            moves++;
            row = pos.row;
            col = pos.col;
        }
    }
    printf("The board for this test is:\n");
    prArr(m);
    printf("\nThe tour ended with %d moves.\n",moves);
    printf("This was a full tour!\n");

}
int xx2(int row,int col)
{
    int m[8][8]= {0};
    int n[8][8]= {0};
    for(int i=0; i<8; i++)
    {
        for(int j=0; j<8; j++)
        {
            int access[ 8 ][ 8 ] =
            {
                2, 3, 4, 4, 4, 4, 3, 2,
                3, 4, 6, 6, 6, 6, 4, 3,
                4, 6, 8, 8, 8, 8, 6, 4,
                4, 6, 8, 8, 8, 8, 6, 4,
                4, 6, 8, 8, 8, 8, 6, 4,
                4, 6, 8, 8, 8, 8, 6, 4,
                3, 4, 6, 6, 6, 6, 4, 3,
                2, 3, 4, 4, 4, 4, 3, 2
            };
            Pos pos;
            int moves = 1;
            row = i;
            col = j;
            m[row][col] = 1;
            for(int s=2; s<=64; s++)
            {
                pos = findNextBestMove(m, access, row, col);
                if(pos.row== -1 && pos.col== -1)
                {
                    break;
                }
                else
                {
                    m[pos.row][pos.col] = s;
                    moves++;
                    row = pos.row;
                    col = pos.col;
                }
            }
            if(moves==64)
            {
                n[i][j]=64;
            }
            else
            {
                n[i][j]=0;
            }

        }
    }
    prarr(n);

}
int main()
{
    int n;
    int row;
    int col;
    while(n!=3)
    {
        printf("Menu\n");
        printf("1. Knight Tour by entering position\n");
        printf("2. Check 64 cases\n");
        printf("3. Exit\n");
        printf("=> choice: ");
        scanf("%d",&n);
        if(n==3)
            break;
        switch(n)
        {
        case 1:
            printf("Enter row and col for number 1: ");
            scanf("%d %d",&row,&col);
            xx(row,col);
            break;
        case 2:
            xx2(row,col);
            break;


        }
    }
}
